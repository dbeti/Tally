@model IEnumerable<Tally.Models.ApplicationViewModels.Course>
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Index";
    var id = UserManager.GetUserId(User);
}

<h2>Index</h2>

<p>
    @if (User.IsInRole("Professor"))
    {
        <a asp-controller="Courses" asp-action="Create">Create New</a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @if (User.IsInRole("Student") && !item.Users.Any(u => u.Id == id))
                    {
                        <form asp-action="Enroll" asp-controller="Courses" asp-route-id="@item.CourseId">
                            <input type="submit" value="Enroll" class="btn btn-default" />
                        </form>
                    }
                    <a asp-action="Details" asp-controller="Courses" asp-route-id="@item.CourseId">Details</a>
                    @if (User.IsInRole("Professor"))
                    {
                        @:|
                        <a asp-action="Edit" asp-controller="Courses" asp-route-id="@item.CourseId">Edit</a> @:|
                        <a asp-action="Delete" asp-controller="Courses" asp-route-id="@item.CourseId">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
